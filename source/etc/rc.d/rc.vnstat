#!/bin/bash
#
# Copyright Derek Macias (parts of code from NUT package)
# Copyright macester (parts of code from NUT package)
# Copyright gfjardim (parts of code from NUT package)
# Copyright SimonF (parts of code from NUT package)
# Copyright Mohamed Emad (icon from vnstat-client package)
# Copyright desertwitch
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License 2
# as published by the Free Software Foundation.
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# Modified by Mario Preksavec <mario@slackware.hr>

CONFIGFILE=/etc/vnstat/vnstat.conf
PIDFILE=/var/run/vnstat/vnstat.pid
DAEMON=vnstatd

PLGPATH="/boot/config/plugins/dwdvm"
DOCROOT="/usr/local/emhttp/plugins/dwdvm"
CONFIG=$PLGPATH/dwdvm.cfg

[ -e "$CONFIG" ] && source $CONFIG

vnstat_start() {
  if [ -e $PIDFILE ] && [ -n "$(pidof $DAEMON)" ]; then
    echo "DVM service is already running with PID: $(cat $PIDFILE) !"
  elif [ -x /usr/sbin/vnstatd ] && [ -r $CONFIGFILE ]; then
    echo "Starting DVM service..."
    /usr/sbin/vnstatd --config $CONFIGFILE --daemon
    rm -f /tmp/dvm*notified
  fi
}

vnstat_stop() {
  if pgrep -x $DAEMON >/dev/null 2>&1; then
    echo "Stopping the DVM service..."
    TIMER=0
    while killall $DAEMON 2>/dev/null; do
      sleep 1
      killall $DAEMON 2>/dev/null
      TIMER=$((TIMER+1))
      if [ $TIMER -ge 30 ]; then
        killall -9 $DAEMON 2>/dev/null
        sleep 1
        break
      fi
    done
  else
    echo "No running DVM service has been found!"
  fi
  rm -f /tmp/dvm*notified
}

vnstat_status() {
  if [ -e $PIDFILE ] && [ -n "$(pidof $DAEMON)" ]; then
    echo "DVM service is running with PID: $(cat $PIDFILE)"
  else
    echo "DVM service is not running."
  fi
}

vnstat_restart() {
  echo "Restarting the DVM service..."
  vnstat_stop
  sleep 2
  vnstat_start
}

backup_db() {
  if [ "$BACKUPDB" == "enable" ] && [ -f /var/lib/vnstat/vnstat.db ]; then
    sleep 2
    echo "Backing up the DVM database to the flash drive..."
    cp -f /var/lib/vnstat/vnstat.db $PLGPATH/vnstat.db
  fi
}

write_config() {
  if [ ! -L /etc/vnstat.conf ]; then
    ln -sf $CONFIGFILE /etc/vnstat.conf
  fi

  if [ ! -d $PLGPATH/vnstat ]; then
    mkdir $PLGPATH/vnstat
  fi

  echo "Writing DVM configuration..."

  cp -f $CONFIG /etc/vnstat/dwdvm.cfg
  cp -rf /etc/vnstat/* $PLGPATH/vnstat/ >/dev/null 2>&1

  if [ "$BACKUPDB" == "enable" ]; then
    if [ "$( grep -ic "/etc/rc.d/rc.vnstat" /etc/rc.d/rc.local_shutdown )" -eq 0 ]; then
      echo "Adding DVM database backup line to rc.local_shutdown script..."
      sed -i -e '/# Get time-out setting/i [ -x /etc/rc.d/rc.vnstat ] && /etc/rc.d/rc.vnstat backup_db' -e //N /etc/rc.d/rc.local_shutdown
    fi

    if [ -f $PLGPATH/vnstat.db ] && [ ! -f /var/lib/vnstat/vnstat.db ]; then
      echo "No local DVM database found, restoring DVM database backup from flash drive..."
      mkdir -p /var/lib/vnstat
      cp -n $PLGPATH/vnstat.db /var/lib/vnstat/vnstat.db
      chown root:root /var/lib/vnstat/vnstat.db
      chmod 644 /var/lib/vnstat/vnstat.db
    fi
  fi

  if [ "$GOODNOTIFY" == "enable" ] || [ "$BADNOTIFY" == "enable" ]; then
    if [ ! -f /boot/config/plugins/dynamix/dwdvm-notify.cron ]; then
      echo "Adding DVM notification service to crontab..."
    fi
    cp -f $DOCROOT/dwdvm-notify.cron /boot/config/plugins/dynamix/dwdvm-notify.cron
  else
    if [ -f /boot/config/plugins/dynamix/dwdvm-notify.cron ]; then
      echo "Removing DVM notification service from crontab..."
      rm -f /boot/config/plugins/dynamix/dwdvm-notify.cron
      rm -f /tmp/dvm*notified
    fi
  fi

  if [ ! "$CRONINT" == "disable" ]; then
    if [ ! -f /boot/config/plugins/dynamix/dwdvm-custom-alarms.cron ]; then
      echo "Adding DVM custom alarms script to crontab (${CRONINT})..."
    fi
    cp -f $DOCROOT/dwdvm-custom-alarms.cron /boot/config/plugins/dynamix/dwdvm-custom-alarms.cron
    if [ "$CRONINT" == "01min" ]; then
      sleep 1
    elif [ "$CRONINT" == "15min" ]; then
      sed -i '/dvm-custom-alarms/s,^\*,*/15,' /boot/config/plugins/dynamix/dwdvm-custom-alarms.cron
      sleep 1
    elif [ "$CRONINT" == "30min" ]; then
      sed -i '/dvm-custom-alarms/s,^\*,*/30,' /boot/config/plugins/dynamix/dwdvm-custom-alarms.cron
      sleep 1
    elif [ "$CRONINT" == "45min" ]; then
      sed -i '/dvm-custom-alarms/s,^\*,*/45,' /boot/config/plugins/dynamix/dwdvm-custom-alarms.cron
      sleep 1
    elif [ "$CRONINT" == "60min" ]; then
      sed -i '/dvm-custom-alarms/s,^\*,0,' /boot/config/plugins/dynamix/dwdvm-custom-alarms.cron
      sleep 1
    else
      sed -i '/dvm-custom-alarms/s,^\*,*/30,' /boot/config/plugins/dynamix/dwdvm-custom-alarms.cron
      sleep 1
    fi
  else
    if [ -f /boot/config/plugins/dynamix/dwdvm-custom-alarms.cron ]; then
      echo "Removing DVM custom alarms script from crontab..."
      rm -f /boot/config/plugins/dynamix/dwdvm-custom-alarms.cron
    fi
  fi

  if [ -d /etc/vnstat ]; then
      echo "Updating permissions for DVM..."
      chown root:root /etc/vnstat
      chmod 755 /etc/vnstat
      chown root:root /etc/vnstat/*
      chmod 644 /etc/vnstat/*
      chmod 755 /etc/vnstat/dvm-custom-alarms.sh
      chmod 755 /etc/vnstat/dvm-user-actions.sh
  fi

  update_cron
  sleep 1
}

case "$1" in
  'start')
    write_config
    vnstat_start
    ;;
  'stop')
    write_config
    vnstat_stop
    ;;
  'restart'|'reload')
    write_config
    vnstat_restart
    ;;
  'status')
    vnstat_status
    ;;
  'write_config')
    write_config
    ;;
  'backup_db')
    write_config
    vnstat_stop
    backup_db
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|reload|status|write_config|backup_db}"
    exit 1
    ;;
esac
