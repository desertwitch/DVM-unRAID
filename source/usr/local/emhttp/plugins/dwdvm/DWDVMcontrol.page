Menu="DWDVMsettings:1"
Title="DVM Settings"
Tag="wrench"
Markdown="false"
---
<?
/* Copyright Derek Macias (parts of code from NUT package)
 * Copyright macester (parts of code from NUT package)
 * Copyright gfjardim (parts of code from NUT package)
 * Copyright SimonF (parts of code from NUT package)
 * Copyright Mohamed Emad (icon from vnstat-client package)
 * Copyright desertwitch
 *
 * Copyright Dan Landon
 * Copyright Bergware International
 * Copyright Lime Technology
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License 2
 * as published by the Free Software Foundation.
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 */
?>
<?require_once '/usr/local/emhttp/plugins/dwdvm/include/dwdvm_config.php';?>

<span style="float:right;margin-right:10px"><a href="<?=$dwdvm_support_link?>" target="_blank" title="DVM Support Thread"><i class="fa fa-medkit"></i> <u>Support Thread</u></a> / <a href="https://humdi.net/vnstat/" target="_blank" title="DVM User Manual"><i class="fa fa-file-text-o"></i> <u>User Manual</u></a></span>

<div>
    <span class="left"><i class="icon fa fa-power-off"></i> Service Settings</span>
</div>

<br>

<form markdown="0" id="dwdvm-settings" name="dwdvm_settings" method="POST" action="/update.php" target="progressFrame">
    <input type="hidden" name="#file" value="dwdvm/dwdvm.cfg">
    <input type="hidden" id="command" name="#command" value="/usr/local/emhttp/plugins/dwdvm/scripts/write_config" />
    
    <dl>
        <dt>DVM Backend:</dt>
        <dd>
	        <strong><?= isset($dwdvm_installed_backend) && $dwdvm_installed_backend ? $dwdvm_installed_backend : "n/a" ?></strong>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>The version of the vnStat backend that is installed on your system for monitoring of the network interfaces.</p>
    </blockquote>

    <dl>
        <dt><strong>Start DVM service:</strong></dt>
        <dd>
            <select id="SERVICE" name="SERVICE" size="1">
                <?=mk_option($dwdvm_service, "disable", "No");?>
                <?=mk_option($dwdvm_service, "enable", "Yes");?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>Set to <strong>'Yes'</strong> to start and enable DVM, the service will start automatically when the system boots.</p>
        <p>Set to <strong>'No'</strong> to stop and disable DVM, the service will not start automatically when the system boots.</p>
    </blockquote>

    <dl>
        <dt>Persist Database on Reboot</dt>
        <dd>
            <select id="BACKUPDB" name="BACKUPDB" class="dwdvm-run" size="1">
                <?=mk_option($dwdvm_backupdb, "disable", "No");?>
                <?=mk_option($dwdvm_backupdb, "enable", "Yes");?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>Set to <strong>'Yes'</strong> to make the DVM database persist regular system reboots.</p>
        <p>Set to <strong>'No'</strong> to always start with a fresh DVM database on system reboot.</p>
        <p>In case of a power outage the last available database remaining on the flash drive will be restored (when enabled).</p>
    </blockquote>

    <dl>
        <dt>
            <input id="DEFAULT" type="submit" name="#default" value="Default">
            <input id="RESETCONF" class="dwdvm-run" type="button" value="Reset Config">
            <input id="RESETALL" class="dwdvm-run" type="button" value="Reset All">
        </dt>
        <dd>
            <input type="submit" id="btnApply" name="#apply" value="Apply">
            <input type="button" value="Done" onclick="done()">
            <input id="RESTART" type="button" value="Restart DVM">
        </dd>
    </dl>

    <blockquote class="inline_help">
    <p><strong>Reset Config</strong> will return your DVM configuration to the default state (preserving the database).</p>
    <p><strong>Reset All</strong> will return your DVM configuration and database to the default state (<u>not</u> preserving the database).</p>
    <p><strong>Restart DVM</strong> will restart the DVM service.</p>
    </blockquote>

</form>

<div>
    <span class="left"><i class="icon fa fa-cogs"></i> Runtime Settings</span>
</div>

<br>

<form markdown="0" id="dwdvm-display" name="dwdvm_display" method="POST" action="/update.php" target="progressFrame">
    <input type="hidden" name="#file" value="dwdvm/dwdvm.cfg">
    <input type="hidden" id="command2" name="#command" value="/usr/local/emhttp/plugins/dwdvm/scripts/write_config" />

    <dl>
        <dt><strong>Primary Network Interface:</strong></dt>
        <dd>
            <input type="text" class="narrow" id="PRIMARY" name="PRIMARY" maxlength="40" value="<?=$dwdvm_primary;?>">
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls what network interface is used for the data volume metrics shown in the dashboard and footer.</p>
        <p>It is also the network interface that is used for the data volume notifications and user actions.</p>
    </blockquote>

    <dl>
        <dt>Show Virtual Network Interfaces:</dt>
        <dd>
            <select id="VIFACES" name="VIFACES" size="1">
                <?=mk_option($dwdvm_vifaces, "disable", "No");?>
                <?=mk_option($dwdvm_vifaces, "enable", "Yes");?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls if virtual network interfaces should also be displayed on this page.</p>
        <p>By default only physical network interfaces are shown and virtual network interfaces will remain hidden.</p>
        <p>Virtual network interfaces are not always monitorable and the data reported for virtual interfaces may therefore be inconsistent.</p>
    </blockquote>

    <dl>
        <dt>Show Removed Network Interfaces:</dt>
        <dd>
            <select id="OIFACES" name="OIFACES" size="1">
                <?=mk_option($dwdvm_oifaces, "disable", "No");?>
                <?=mk_option($dwdvm_oifaces, "enable", "Yes");?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls if network interfaces that are in the database, but no longer exist on the system, should be shown on this page.</p>
        <p>You can purge any removed network interfaces and their recorded data volume information from the database using the <strong>'Purge Database'</strong> button at the bottom of this page.</p>
    </blockquote>

    <dl>
        <dt>Show Data Volume Metrics in Dashboard:</dt>
        <dd>
            <select id="DASHB" name="DASHB" size="1">
                <?=mk_option($dwdvm_dashb, "disable", "No");?>
                <?=mk_option($dwdvm_dashb, "enable", "Yes");?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting will enable a dashboard with data volume metrics for the primary network interface (as configured above) on your system front page.</p>
    </blockquote>

    <dl>
        <dt>Show Data Volume Metrics in Footer:</dt>
        <dd>
            <select id="FOOTER" name="FOOTER" size="1">
                <?=mk_option($dwdvm_footer, "disable", "No");?>
                <?=mk_option($dwdvm_footer, "enable", "Yes");?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting will enable a footer with data volume metrics for the primary network interface (as configured above) on all of your system pages.</p>
    </blockquote>

    <dl>
        <dt>Miniature Data Volume Reporting Time:</dt>
        <dd>
            <select id="FOOTERFORMAT" name="FOOTERFORMAT" size="1">
                <?=mk_option($dwdvm_footerformat, "5", "Last 5 Minutes");?>
                <?=mk_option($dwdvm_footerformat, "h", "Last Hour");?>
                <?=mk_option($dwdvm_footerformat, "d", "Last Day");?>
                <?=mk_option($dwdvm_footerformat, "m", "Last Month");?>
                <?=mk_option($dwdvm_footerformat, "y", "Last Year");?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls how the miniature data volume metrics are displayed in the dashboard and footer.</p>
    </blockquote>

    <dl>
        <dt>General Data Volume Reporting Format:</dt>
        <dd>
            <select id="REPORT" name="REPORT" size="1">
                <?=mk_option($dwdvm_report, 'text', 'Textual Metrics');?>
                <?=mk_option($dwdvm_report, 'images', 'Image Metrics');?>
                <?=mk_option($dwdvm_report, 'both', 'Dual Metrics');?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls how the data volume metrics are displayed on this page.</p>
        <p>Not all versions of UNRAID include the required image generation libraries, so on some system versions the image metrics may not show.</p>
    </blockquote>

    <dl>
        <dt><strong>Data Volume <u>Exceeded</u> Notifications:</strong></dt>
        <dd>
            <select id="BADNOTIFY" name="BADNOTIFY" size="1">
                <?=mk_option($dwdvm_bad_notify, "disable", "No");?>
                <?=mk_option($dwdvm_bad_notify, "enable", "Yes");?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting will enable notifications when a certain data volume threshold has been exceeded on the primary network interface.</p>
    </blockquote>

    <dl>
        <dt><strong>Data Volume <u>Reset</u> Notifications:</strong></dt>
        <dd>
            <select id="GOODNOTIFY" name="GOODNOTIFY" size="1">
                <?=mk_option($dwdvm_good_notify, "disable", "No");?>
                <?=mk_option($dwdvm_good_notify, "enable", "Yes");?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting will enable notifications when the data limit is normal again (reset) on the primary network interface (enough time has passed).</p>
    </blockquote>

    <dl>
        <dt><strong>Data Volume <u>Exceeded</u> User Actions:</strong></dt>
        <dd>
            <select id="BADACTIONS" name="BADACTIONS" size="1">
                <?=mk_option($dwdvm_bad_actions, "disable", "No");?>
                <?=mk_option($dwdvm_bad_actions, "enable", "Yes");?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting will enable and execute user actions (below Docker settings or configured inside <strong>dvm-user-actions.sh</strong>) once a certain data volume threshold has been exceeded on the primary network interface.</p>
    </blockquote>

    <dl>
        <dt><strong>Data Volume <u>Reset</u> User Actions:</strong></dt>
        <dd>
            <select id="GOODACTIONS" name="GOODACTIONS" size="1">
                <?=mk_option($dwdvm_good_actions, "disable", "No");?>
                <?=mk_option($dwdvm_good_actions, "enable", "Yes");?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting will enable and execute user actions (below Docker settings or configured inside <strong>dvm-user-actions.sh</strong>) once the data limit is normal again (reset) on the primary network interface (enough time has passed).</p>
    </blockquote>


    <dl>
        <dt>Custom Alarms Script Execution Frequency:</dt>
            <dd>
                <select id="CRONINT" name="CRONINT" size="1">
                    <?=mk_option($dwdvm_cronint, 'disable', 'Never');?>
                    <?=mk_option($dwdvm_cronint, '01min', 'Every 01 Minute(s)');?>
                    <?=mk_option($dwdvm_cronint, '15min', 'Every 15 Minute(s)');?>
                    <?=mk_option($dwdvm_cronint, '30min', 'Every 30 Minute(s)');?>
                    <?=mk_option($dwdvm_cronint, '45min', 'Every 45 Minute(s)');?>
                    <?=mk_option($dwdvm_cronint, '60min', 'Every 60 Minute(s)');?>
                </select>
            </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls how often the custom alarms script (contents of <strong>dvm-custom-alarms.sh</strong>) is executed by the crontab.</p>
        <p>This script is for advanced users and operates independently from the notifications, data limits and user actions configured above and below.</p>
    </blockquote>

    <br><hr><br>

    <div>
    <span class="left"><i class="icon fa fa-bullhorn"></i> Primary Interface Thresholds and User Actions </span>
    </div><br>

    <?
    $dvm_available_raw = shell_exec("docker ps --format '{{.Names}}' --all 2>/dev/null");
    $dvm_available_dockers = false;
    if(!empty($dvm_available_raw)) {
    	$dvm_available_dockers = explode(PHP_EOL, trim($dvm_available_raw));
    } else {
	    $dvm_available_dockers = false;
    }
    ?>

    <dl>
        <dt>Last <strong>Hour</strong> <strong><u>IN</u></strong>-bound Data Volume Threshold:</dt>
        <dd>
            <input type="text" class="narrow dvmlimit" id="RXLIMITH" name="RXLIMITH" maxlength="40" value="<?=$dwdvm_hlimit_rx;?>">
            <select id="RXUNITH" name="RXUNITH" size="1">
            <?=mk_option($dwdvm_hunit_rx, "B", "B");?>
            <?=mk_option($dwdvm_hunit_rx, "KB", "KB");?>
            <?=mk_option($dwdvm_hunit_rx, "MB", "MB");?>
            <?=mk_option($dwdvm_hunit_rx, "GB", "GB");?>
            <?=mk_option($dwdvm_hunit_rx, "TB", "TB");?>
            </select><em style="font-size:x-small">disable: -1</em>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls the last hour inbound data volume threshold on notifications, user actions, dashboard and footer (for the primary network interface).</p>
        <p><strong>This settings only has an effect on notifications and user actions when at least one notification or user action (threshold exceeded or reset) is enabled.</strong></p>
    </blockquote>

    <dl>
        <dt>Last <strong>Hour</strong> <strong><u>IN</u></strong>-bound Stop / Start Docker Container:</dt>
        <dd>
            <select id="RXUNITHSTOP" name="RXUNITHSTOP" size="1">
            <?=mk_option($dwdvm_hunit_rx_stop, "disable", "Stop: None");?>
            <?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_hunit_rx_stop, $dvm_available_docker, "Stop: $dvm_available_docker")); } }?>
            </select>
            <select id="RXUNITHSTART" name="RXUNITHSTART" size="1">
            <?=mk_option($dwdvm_hunit_rx_start, "disable", "Start: None");?>
            <?if($dvm_available_dockers) { echo("hi"); foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_hunit_rx_start, $dvm_available_docker, "Start: $dvm_available_docker")); } }?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls what Docker containers should be stopped when the last hour inbound data volume threshold has been exceeded (for the primary network interface).</p>
        <p>This setting controls what Docker containers should be started when the last hour inbound data volume threshold has returned to normal (reset for the primary network interface).</p>
        <p><strong>This settings only has an effect when the respective user actions (threshold exceeded user action for stop container / threshold reset user action for start container) are enabled.</strong></p>
        <p><em>If you want to execute more commands or do more advanced scripting please refer to the <strong>dvm-user-actions.sh</strong> script, which can be edited using the DVM configuration editor.</em></p>
    </blockquote>

    <dl>
        <dt>Last <strong>Hour</strong> <strong><u>OUT</u></strong>-bound Data Volume Threshold:</dt>
        <dd>
            <input type="text" class="narrow dvmlimit" id="TXLIMITH" name="TXLIMITH" maxlength="40" value="<?=$dwdvm_hlimit_tx;?>">
            <select id="TXUNITH" name="TXUNITH" size="1">
            <?=mk_option($dwdvm_hunit_tx, "B", "B");?>
            <?=mk_option($dwdvm_hunit_tx, "KB", "KB");?>
            <?=mk_option($dwdvm_hunit_tx, "MB", "MB");?>
            <?=mk_option($dwdvm_hunit_tx, "GB", "GB");?>
            <?=mk_option($dwdvm_hunit_tx, "TB", "TB");?>
            </select><em style="font-size:x-small">disable: -1</em>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls the last hour outbound data volume threshold on notifications, user actions, dashboard and footer (for the primary network interface).</p>
        <p><strong>This settings only has an effect on notifications and user actions when at least one notification or user action (threshold exceeded or reset) is enabled.</strong></p>
    </blockquote>

    <dl>
        <dt>Last <strong>Hour</strong> <strong><u>OUT</u></strong>-bound Stop / Start Docker Container:</dt>
        <dd>
            <select id="TXUNITHSTOP" name="TXUNITHSTOP" size="1">
            <?=mk_option($dwdvm_hunit_tx_stop, "disable", "Stop: None");?>
            <?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_hunit_tx_stop, $dvm_available_docker, "Stop: $dvm_available_docker")); } }?>
            </select>
            <select id="TXUNITHSTART" name="TXUNITHSTART" size="1">
            <?=mk_option($dwdvm_hunit_tx_start, "disable", "Start: None");?>
            <?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_hunit_tx_start, $dvm_available_docker, "Start: $dvm_available_docker")); } }?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls what Docker containers should be stopped when the last hour outbound data volume threshold has been exceeded (for the primary network interface).</p>
        <p>This setting controls what Docker containers should be started when the last hour outbound data volume threshold has returned to normal (reset for the primary network interface).</p>
        <p><strong>This settings only has an effect when the respective user actions (threshold exceeded user action for stop container / threshold reset user action for start container) are enabled.</strong></p>
        <p><em>If you want to execute more commands or do more advanced scripting please refer to the <strong>dvm-user-actions.sh</strong> script, which can be edited using the DVM configuration editor.</em></p>
    </blockquote>

    <dl>
        <dt>Last <strong>Day</strong> <strong><u>IN</u></strong>-bound Data Volume Threshold:</dt>
        <dd>
            <input type="text" class="narrow dvmlimit" id="RXLIMITD" name="RXLIMITD" maxlength="40" value="<?=$dwdvm_dlimit_rx;?>">
            <select id="RXUNITD" name="RXUNITD" size="1">
            <?=mk_option($dwdvm_dunit_rx, "B", "B");?>
            <?=mk_option($dwdvm_dunit_rx, "KB", "KB");?>
            <?=mk_option($dwdvm_dunit_rx, "MB", "MB");?>
            <?=mk_option($dwdvm_dunit_rx, "GB", "GB");?>
            <?=mk_option($dwdvm_dunit_rx, "TB", "TB");?>
            </select><em style="font-size:x-small">disable: -1</em>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls the last day inbound data volume threshold on notifications, user actions, dashboard and footer (for the primary network interface).</p>
        <p><strong>This settings only has an effect on notifications and user actions when at least one notification or user action (threshold exceeded or reset) is enabled.</strong></p>
    </blockquote>

    <dl>
        <dt>Last <strong>Day</strong> <strong><u>IN</u></strong>-bound Stop / Start Docker Container:</dt>
        <dd>
            <select id="RXUNITDSTOP" name="RXUNITDSTOP" size="1">
            <?=mk_option($dwdvm_dunit_rx_stop, "disable", "Stop: None");?>
            <?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_dunit_rx_stop, $dvm_available_docker, "Stop: $dvm_available_docker")); } }?>
            </select>
            <select id="RXUNITDSTART" name="RXUNITDSTART" size="1">
            <?=mk_option($dwdvm_dunit_rx_start, "disable", "Start: None");?>
            <?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_dunit_rx_start, $dvm_available_docker, "Start: $dvm_available_docker")); } }?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls what Docker containers should be stopped when the last day inbound data volume threshold has been exceeded (for the primary network interface).</p>
        <p>This setting controls what Docker containers should be started when the last day inbound data volume threshold has returned to normal (reset for the primary network interface).</p>
        <p><strong>This settings only has an effect when the respective user actions (threshold exceeded user action for stop container / threshold reset user action for start container) are enabled.</strong></p>
        <p><em>If you want to execute more commands or do more advanced scripting please refer to the <strong>dvm-user-actions.sh</strong> script, which can be edited using the DVM configuration editor.</em></p>
    </blockquote>

    <dl>
        <dt>Last <strong>Day</strong> <strong><u>OUT</u></strong>-bound Data Volume Threshold:</dt>
        <dd>
            <input type="text" class="narrow dvmlimit" id="TXLIMITD" name="TXLIMITD" maxlength="40" value="<?=$dwdvm_dlimit_tx;?>">
            <select id="TXUNITD" name="TXUNITD" size="1">
            <?=mk_option($dwdvm_dunit_tx, "B", "B");?>
            <?=mk_option($dwdvm_dunit_tx, "KB", "KB");?>
            <?=mk_option($dwdvm_dunit_tx, "MB", "MB");?>
            <?=mk_option($dwdvm_dunit_tx, "GB", "GB");?>
            <?=mk_option($dwdvm_dunit_tx, "TB", "TB");?>
            </select><em style="font-size:x-small">disable: -1</em>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls the last day outbound data volume threshold on notifications, user actions, dashboard and footer (for the primary network interface).</p>
        <p><strong>This settings only has an effect on notifications and user actions when at least one notification or user action (threshold exceeded or reset) is enabled.</strong></p>
    </blockquote>

    <dl>
        <dt>Last <strong>Day</strong> <strong><u>OUT</u></strong>-bound Stop / Start Docker Container:</dt>
        <dd>
            <select id="TXUNITDSTOP" name="TXUNITDSTOP" size="1">
            <?=mk_option($dwdvm_dunit_tx_stop, "disable", "Stop: None");?>
            <?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_dunit_tx_stop, $dvm_available_docker, "Stop: $dvm_available_docker")); } }?>
            </select>
            <select id="TXUNITDSTART" name="TXUNITDSTART" size="1">
            <?=mk_option($dwdvm_dunit_tx_start, "disable", "Start: None");?>
            <?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_dunit_tx_start, $dvm_available_docker, "Start: $dvm_available_docker")); } }?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls what Docker containers should be stopped when the last day outbound data volume threshold has been exceeded (for the primary network interface).</p>
        <p>This setting controls what Docker containers should be started when the last day outbound data volume threshold has returned to normal (reset for the primary network interface).</p>
        <p><strong>This settings only has an effect when the respective user actions (threshold exceeded user action for stop container / threshold reset user action for start container) are enabled.</strong></p>
        <p><em>If you want to execute more commands or do more advanced scripting please refer to the <strong>dvm-user-actions.sh</strong> script, which can be edited using the DVM configuration editor.</em></p>
    </blockquote>

    <dl>
        <dt>Last <strong>Month</strong> <strong><u>IN</u></strong>-bound Data Volume Threshold:</dt>
        <dd>
            <input type="text" class="narrow dvmlimit" id="RXLIMITM" name="RXLIMITM" maxlength="40" value="<?=$dwdvm_mlimit_rx;?>">
            <select id="RXUNITM" name="RXUNITM" size="1">
            <?=mk_option($dwdvm_munit_rx, "B", "B");?>
            <?=mk_option($dwdvm_munit_rx, "KB", "KB");?>
            <?=mk_option($dwdvm_munit_rx, "MB", "MB");?>
            <?=mk_option($dwdvm_munit_rx, "GB", "GB");?>
            <?=mk_option($dwdvm_munit_rx, "TB", "TB");?>
            </select><em style="font-size:x-small">disable: -1</em>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls the last month inbound data volume threshold on notifications, user actions, dashboard and footer (for the primary network interface).</p>
        <p><strong>This settings only has an effect on notifications and user actions when at least one notification or user action (threshold exceeded or reset) is enabled.</strong></p>
    </blockquote>

    <dl>
        <dt>Last <strong>Month</strong> <strong><u>IN</u></strong>-bound Stop / Start Docker Container:</dt>
        <dd>
            <select id="RXUNITMSTOP" name="RXUNITMSTOP" size="1">
            <?=mk_option($dwdvm_munit_rx_stop, "disable", "Stop: None");?>
            <?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_munit_rx_stop, $dvm_available_docker, "Stop: $dvm_available_docker")); } }?>
            </select>
            <select id="RXUNITMSTART" name="RXUNITMSTART" size="1">
            <?=mk_option($dwdvm_munit_rx_start, "disable", "Start: None");?>
            <?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_munit_rx_start, $dvm_available_docker, "Start: $dvm_available_docker")); } }?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls what Docker containers should be stopped when the last month inbound data volume threshold has been exceeded (for the primary network interface).</p>
        <p>This setting controls what Docker containers should be started when the last month inbound data volume threshold has returned to normal (reset for the primary network interface).</p>
        <p><strong>This settings only has an effect when the respective user actions (threshold exceeded user action for stop container / threshold reset user action for start container) are enabled.</strong></p>
        <p><em>If you want to execute more commands or do more advanced scripting please refer to the <strong>dvm-user-actions.sh</strong> script, which can be edited using the DVM configuration editor.</em></p>
    </blockquote>

    <dl>
        <dt>Last <strong>Month</strong> <strong><u>OUT</u></strong>-bound Data Volume Threshold:</dt>
        <dd>
            <input type="text" class="narrow dvmlimit" id="TXLIMITM" name="TXLIMITM" maxlength="40" value="<?=$dwdvm_mlimit_tx;?>">
            <select id="TXUNITM" name="TXUNITM" size="1">
            <?=mk_option($dwdvm_munit_tx, "B", "B");?>
            <?=mk_option($dwdvm_munit_tx, "KB", "KB");?>
            <?=mk_option($dwdvm_munit_tx, "MB", "MB");?>
            <?=mk_option($dwdvm_munit_tx, "GB", "GB");?>
            <?=mk_option($dwdvm_munit_tx, "TB", "TB");?>
            </select><em style="font-size:x-small">disable: -1</em>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls the last month outbound data volume threshold on notifications, user actions, dashboard and footer (for the primary network interface).</p>
        <p><strong>This settings only has an effect on notifications and user actions when at least one notification or user action (threshold exceeded or reset) is enabled.</strong></p>
    </blockquote>

    <dl>
        <dt>Last <strong>Month</strong> <strong><u>OUT</u></strong>-bound Stop / Start Docker Container:</dt>
        <dd>
            <select id="TXUNITMSTOP" name="TXUNITMSTOP" size="1">
            <?=mk_option($dwdvm_munit_tx_stop, "disable", "Stop: None");?>
            <?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_munit_tx_stop, $dvm_available_docker, "Stop: $dvm_available_docker")); } }?>
            </select>
            <select id="TXUNITMSTART" name="TXUNITMSTART" size="1">
            <?=mk_option($dwdvm_munit_tx_start, "disable", "Start: None");?>
            <?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_munit_tx_start, $dvm_available_docker, "Start: $dvm_available_docker")); } }?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls what Docker containers should be stopped when the last month outbound data volume threshold has been exceeded (for the primary network interface).</p>
        <p>This setting controls what Docker containers should be started when the last month outbound data volume threshold has returned to normal (reset for the primary network interface).</p>
        <p><strong>This settings only has an effect when the respective user actions (threshold exceeded user action for stop container / threshold reset user action for start container) are enabled.</strong></p>
        <p><em>If you want to execute more commands or do more advanced scripting please refer to the <strong>dvm-user-actions.sh</strong> script, which can be edited using the DVM configuration editor.</em></p>
    </blockquote>

    <dl>
        <dt>Last <strong>Year</strong> <strong><u>IN</u></strong>-bound Data Volume Threshold:</dt>
        <dd>
            <input type="text" class="narrow dvmlimit" id="RXLIMITY" name="RXLIMITY" maxlength="40" value="<?=$dwdvm_ylimit_rx;?>">
            <select id="RXUNITY" name="RXUNITY" size="1">
            <?=mk_option($dwdvm_yunit_rx, "B", "B");?>
            <?=mk_option($dwdvm_yunit_rx, "KB", "KB");?>
            <?=mk_option($dwdvm_yunit_rx, "MB", "MB");?>
            <?=mk_option($dwdvm_yunit_rx, "GB", "GB");?>
            <?=mk_option($dwdvm_yunit_rx, "TB", "TB");?>
            </select><em style="font-size:x-small">disable: -1</em>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls the last year inbound data volume threshold on notifications, user actions, dashboard and footer (for the primary network interface).</p>
        <p><strong>This settings only has an effect on notifications and user actions when at least one notification or user action (threshold exceeded or reset) is enabled.</strong></p>
    </blockquote>

    <dl>
        <dt>Last <strong>Year</strong> <strong><u>IN</u></strong>-bound Stop / Start Docker Container:</dt>
        <dd>
            <select id="RXUNITYSTOP" name="RXUNITYSTOP" size="1">
            <?=mk_option($dwdvm_yunit_rx_stop, "disable", "Stop: None");?>
            <?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_yunit_rx_stop, $dvm_available_docker, "Stop: $dvm_available_docker")); } }?>
            </select>
            <select id="RXUNITYSTART" name="RXUNITYSTART" size="1">
            <?=mk_option($dwdvm_yunit_rx_start, "disable", "Start: None");?>
            <?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_yunit_rx_start, $dvm_available_docker, "Start: $dvm_available_docker")); } }?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls what Docker containers should be stopped when the last year inbound data volume threshold has been exceeded (for the primary network interface).</p>
        <p>This setting controls what Docker containers should be started when the last year inbound data volume threshold has returned to normal (reset for the primary network interface).</p>
        <p><strong>This settings only has an effect when the respective user actions (threshold exceeded user action for stop container / threshold reset user action for start container) are enabled.</strong></p>
        <p><em>If you want to execute more commands or do more advanced scripting please refer to the <strong>dvm-user-actions.sh</strong> script, which can be edited using the DVM configuration editor.</em></p>
    </blockquote>

    <dl>
        <dt>Last <strong>Year</strong> <strong><u>OUT</u></strong>-bound Data Volume Threshold:</dt>
        <dd>
            <input type="text" class="narrow dvmlimit" id="TXLIMITY" name="TXLIMITY" maxlength="40" value="<?=$dwdvm_ylimit_tx;?>">
            <select id="TXUNITY" name="TXUNITY" size="1">
            <?=mk_option($dwdvm_yunit_tx, "B", "B");?>
            <?=mk_option($dwdvm_yunit_tx, "KB", "KB");?>
            <?=mk_option($dwdvm_yunit_tx, "MB", "MB");?>
            <?=mk_option($dwdvm_yunit_tx, "GB", "GB");?>
            <?=mk_option($dwdvm_yunit_tx, "TB", "TB");?>
            </select><em style="font-size:x-small">disable: -1</em>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls the last year outbound data volume threshold on notifications, user actions, dashboard and footer (for the primary network interface).</p>
        <p><strong>This settings only has an effect on notifications and user actions when at least one notification or user action (threshold exceeded or reset) is enabled.</strong></p>
    </blockquote>

    <dl>
        <dt>Last <strong>Year</strong> <strong><u>OUT</u></strong>-bound Stop / Start Docker Container:</dt>
        <dd>
            <select id="TXUNITYSTOP" name="TXUNITYSTOP" size="1">
            <?=mk_option($dwdvm_yunit_tx_stop, "disable", "Stop: None");?>
            <?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_yunit_tx_stop, $dvm_available_docker, "Stop: $dvm_available_docker")); } }?>
            </select>
            <select id="TXUNITYSTART" name="TXUNITYSTART" size="1">
            <?=mk_option($dwdvm_yunit_tx_start, "disable", "Start: None");?>
            <?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_yunit_tx_start, $dvm_available_docker, "Start: $dvm_available_docker")); } }?>
            </select>
        </dd>
    </dl>

    <blockquote class="inline_help">
        <p>This setting controls what Docker containers should be stopped when the last year outbound data volume threshold has been exceeded (for the primary network interface).</p>
        <p>This setting controls what Docker containers should be started when the last year outbound data volume threshold has returned to normal (reset for the primary network interface).</p>
        <p><strong>This settings only has an effect when the respective user actions (threshold exceeded user action for stop container / threshold reset user action for start container) are enabled.</strong></p>
        <p><em>If you want to execute more commands or do more advanced scripting please refer to the <strong>dvm-user-actions.sh</strong> script, which can be edited using the DVM configuration editor.</em></p>
    </blockquote>

    <br><hr><br>

    <div>
    <span class="left"><i class="icon fa fa-bullhorn"></i> Advanced Interface Thresholds and User Actions </span>
    </div><br>

    <div> 
    <table class="tablesorter">
    <thead><tr><th><strong>Network Interface</strong></th><th><strong>Traffic Direction</strong></th><th><strong>Timespan Observed</strong></th><th><strong>Threshold Limit</strong></th><th><strong>Threshold Unit</strong></th><th><strong>Stop Docker Container</strong></th><th><strong>Start Docker Container</strong></th><th><strong>dvm-user-actions.sh</strong></th></tr></thead>
    <tbody>
    <tr>
    <td><input type="text" class="narrow" id="CUSTOM1INTERFACE" name="CUSTOM1INTERFACE" value="<?=$dwdvm_custom1_interface;?>"></input></td>
    <td><select id="CUSTOM1MODE" name="CUSTOM1MODE" size="1"><?=mk_option($dwdvm_custom1_mode, "rx", "Inbound");?><?=mk_option($dwdvm_custom1_mode, "tx", "Outbound");?></select></td>
    <td><select id="CUSTOM1TIME" name="CUSTOM1TIME" size="1"><?=mk_option($dwdvm_custom1_time, "h", "Last Hour");?><?=mk_option($dwdvm_custom1_time, "d", "Last Day");?><?=mk_option($dwdvm_custom1_time, "m", "Last Month");?><?=mk_option($dwdvm_custom1_time, "y", "Last Year");?></select></td>
    <td><input type="text" class="narrow dvmlimit2" id="CUSTOM1LIMIT" name="CUSTOM1LIMIT" value="<?=$dwdvm_custom1_limit;?>"></input></td>
    <td><select id="CUSTOM1UNIT" name="CUSTOM1UNIT" size="1"><?=mk_option($dwdvm_custom1_unit, "B", "B");?><?=mk_option($dwdvm_custom1_unit, "KB", "KB");?><?=mk_option($dwdvm_custom1_unit, "MB", "MB");?><?=mk_option($dwdvm_custom1_unit, "GB", "GB");?><?=mk_option($dwdvm_custom1_unit, "TB", "TB");?></select></td>
    <td><select id="CUSTOM1STOP" name="CUSTOM1STOP" size="1"><?=mk_option($dwdvm_custom1_stop, "disable", "Stop: None");?><?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_custom1_stop, $dvm_available_docker, "Stop: $dvm_available_docker")); } }?></select></td>
    <td><select id="CUSTOM1START" name="CUSTOM1START" size="1"><?=mk_option($dwdvm_custom1_start, "disable", "Start: None");?><?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_custom1_start, $dvm_available_docker, "Start: $dvm_available_docker")); } }?></select></td>
    <td><select id="CUSTOM1ACTION" name="CUSTOM1ACTION" size="1"><?=mk_option($dwdvm_custom1_action, "disable", "No");?><?=mk_option($dwdvm_custom1_action, "enable", "Yes");?></select></td>
    </tr>
    <tr>
    <td><input type="text" class="narrow" id="CUSTOM2INTERFACE" name="CUSTOM2INTERFACE" value="<?=$dwdvm_custom2_interface;?>"></input></td>
    <td><select id="CUSTOM2MODE" name="CUSTOM2MODE" size="1"><?=mk_option($dwdvm_custom2_mode, "rx", "Inbound");?><?=mk_option($dwdvm_custom2_mode, "tx", "Outbound");?></select></td>
    <td><select id="CUSTOM2TIME" name="CUSTOM2TIME" size="1"><?=mk_option($dwdvm_custom2_time, "h", "Last Hour");?><?=mk_option($dwdvm_custom2_time, "d", "Last Day");?><?=mk_option($dwdvm_custom2_time, "m", "Last Month");?><?=mk_option($dwdvm_custom2_time, "y", "Last Year");?></select></td>
    <td><input type="text" class="narrow dvmlimit2" id="CUSTOM2LIMIT" name="CUSTOM2LIMIT" value="<?=$dwdvm_custom2_limit;?>"></input></td>
    <td><select id="CUSTOM2UNIT" name="CUSTOM2UNIT" size="1"><?=mk_option($dwdvm_custom2_unit, "B", "B");?><?=mk_option($dwdvm_custom2_unit, "KB", "KB");?><?=mk_option($dwdvm_custom2_unit, "MB", "MB");?><?=mk_option($dwdvm_custom2_unit, "GB", "GB");?><?=mk_option($dwdvm_custom2_unit, "TB", "TB");?></select></td>
    <td><select id="CUSTOM2STOP" name="CUSTOM2STOP" size="1"><?=mk_option($dwdvm_custom2_stop, "disable", "Stop: None");?><?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_custom2_stop, $dvm_available_docker, "Stop: $dvm_available_docker")); } }?></select></td>
    <td><select id="CUSTOM2START" name="CUSTOM2START" size="1"><?=mk_option($dwdvm_custom2_start, "disable", "Start: None");?><?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_custom2_start, $dvm_available_docker, "Start: $dvm_available_docker")); } }?></select></td>
    <td><select id="CUSTOM2ACTION" name="CUSTOM2ACTION" size="1"><?=mk_option($dwdvm_custom2_action, "disable", "No");?><?=mk_option($dwdvm_custom2_action, "enable", "Yes");?></select></td>
    </tr>
    <tr>
    <td><input type="text" class="narrow" id="CUSTOM3INTERFACE" name="CUSTOM3INTERFACE" value="<?=$dwdvm_custom3_interface;?>"></input></td>
    <td><select id="CUSTOM3MODE" name="CUSTOM3MODE" size="1"><?=mk_option($dwdvm_custom3_mode, "rx", "Inbound");?><?=mk_option($dwdvm_custom3_mode, "tx", "Outbound");?></select></td>
    <td><select id="CUSTOM3TIME" name="CUSTOM3TIME" size="1"><?=mk_option($dwdvm_custom3_time, "h", "Last Hour");?><?=mk_option($dwdvm_custom3_time, "d", "Last Day");?><?=mk_option($dwdvm_custom3_time, "m", "Last Month");?><?=mk_option($dwdvm_custom3_time, "y", "Last Year");?></select></td>
    <td><input type="text" class="narrow dvmlimit2" id="CUSTOM3LIMIT" name="CUSTOM3LIMIT" value="<?=$dwdvm_custom3_limit;?>"></input></td>
    <td><select id="CUSTOM3UNIT" name="CUSTOM3UNIT" size="1"><?=mk_option($dwdvm_custom3_unit, "B", "B");?><?=mk_option($dwdvm_custom3_unit, "KB", "KB");?><?=mk_option($dwdvm_custom3_unit, "MB", "MB");?><?=mk_option($dwdvm_custom3_unit, "GB", "GB");?><?=mk_option($dwdvm_custom3_unit, "TB", "TB");?></select></td>
    <td><select id="CUSTOM3STOP" name="CUSTOM3STOP" size="1"><?=mk_option($dwdvm_custom3_stop, "disable", "Stop: None");?><?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_custom3_stop, $dvm_available_docker, "Stop: $dvm_available_docker")); } }?></select></td>
    <td><select id="CUSTOM3START" name="CUSTOM3START" size="1"><?=mk_option($dwdvm_custom3_start, "disable", "Start: None");?><?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_custom3_start, $dvm_available_docker, "Start: $dvm_available_docker")); } }?></select></td>
    <td><select id="CUSTOM3ACTION" name="CUSTOM3ACTION" size="1"><?=mk_option($dwdvm_custom3_action, "disable", "No");?><?=mk_option($dwdvm_custom3_action, "enable", "Yes");?></select></td>
    </tr>
    <tr>
    <td><input type="text" class="narrow" id="CUSTOM4INTERFACE" name="CUSTOM4INTERFACE" value="<?=$dwdvm_custom4_interface;?>"></input></td>
    <td><select id="CUSTOM4MODE" name="CUSTOM4MODE" size="1"><?=mk_option($dwdvm_custom4_mode, "rx", "Inbound");?><?=mk_option($dwdvm_custom4_mode, "tx", "Outbound");?></select></td>
    <td><select id="CUSTOM4TIME" name="CUSTOM4TIME" size="1"><?=mk_option($dwdvm_custom4_time, "h", "Last Hour");?><?=mk_option($dwdvm_custom4_time, "d", "Last Day");?><?=mk_option($dwdvm_custom4_time, "m", "Last Month");?><?=mk_option($dwdvm_custom4_time, "y", "Last Year");?></select></td>
    <td><input type="text" class="narrow dvmlimit2" id="CUSTOM4LIMIT" name="CUSTOM4LIMIT" value="<?=$dwdvm_custom4_limit;?>"></input></td>
    <td><select id="CUSTOM4UNIT" name="CUSTOM4UNIT" size="1"><?=mk_option($dwdvm_custom4_unit, "B", "B");?><?=mk_option($dwdvm_custom4_unit, "KB", "KB");?><?=mk_option($dwdvm_custom4_unit, "MB", "MB");?><?=mk_option($dwdvm_custom4_unit, "GB", "GB");?><?=mk_option($dwdvm_custom4_unit, "TB", "TB");?></select></td>
    <td><select id="CUSTOM4STOP" name="CUSTOM4STOP" size="1"><?=mk_option($dwdvm_custom4_stop, "disable", "Stop: None");?><?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_custom4_stop, $dvm_available_docker, "Stop: $dvm_available_docker")); } }?></select></td>
    <td><select id="CUSTOM4START" name="CUSTOM4START" size="1"><?=mk_option($dwdvm_custom4_start, "disable", "Start: None");?><?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_custom4_start, $dvm_available_docker, "Start: $dvm_available_docker")); } }?></select></td>
    <td><select id="CUSTOM4ACTION" name="CUSTOM4ACTION" size="1"><?=mk_option($dwdvm_custom4_action, "disable", "No");?><?=mk_option($dwdvm_custom4_action, "enable", "Yes");?></select></td>
    </tr>
    <tr>
    <td><input type="text" class="narrow" id="CUSTOM5INTERFACE" name="CUSTOM5INTERFACE" value="<?=$dwdvm_custom5_interface;?>"></input></td>
    <td><select id="CUSTOM5MODE" name="CUSTOM5MODE" size="1"><?=mk_option($dwdvm_custom5_mode, "rx", "Inbound");?><?=mk_option($dwdvm_custom5_mode, "tx", "Outbound");?></select></td>
    <td><select id="CUSTOM5TIME" name="CUSTOM5TIME" size="1"><?=mk_option($dwdvm_custom5_time, "h", "Last Hour");?><?=mk_option($dwdvm_custom5_time, "d", "Last Day");?><?=mk_option($dwdvm_custom5_time, "m", "Last Month");?><?=mk_option($dwdvm_custom5_time, "y", "Last Year");?></select></td>
    <td><input type="text" class="narrow dvmlimit2" id="CUSTOM5LIMIT" name="CUSTOM5LIMIT" value="<?=$dwdvm_custom5_limit;?>"></input></td>
    <td><select id="CUSTOM5UNIT" name="CUSTOM5UNIT" size="1"><?=mk_option($dwdvm_custom5_unit, "B", "B");?><?=mk_option($dwdvm_custom5_unit, "KB", "KB");?><?=mk_option($dwdvm_custom5_unit, "MB", "MB");?><?=mk_option($dwdvm_custom5_unit, "GB", "GB");?><?=mk_option($dwdvm_custom5_unit, "TB", "TB");?></select></td>
    <td><select id="CUSTOM5STOP" name="CUSTOM5STOP" size="1"><?=mk_option($dwdvm_custom5_stop, "disable", "Stop: None");?><?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_custom5_stop, $dvm_available_docker, "Stop: $dvm_available_docker")); } }?></select></td>
    <td><select id="CUSTOM5START" name="CUSTOM5START" size="1"><?=mk_option($dwdvm_custom5_start, "disable", "Start: None");?><?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_custom5_start, $dvm_available_docker, "Start: $dvm_available_docker")); } }?></select></td>
    <td><select id="CUSTOM5ACTION" name="CUSTOM5ACTION" size="1"><?=mk_option($dwdvm_custom5_action, "disable", "No");?><?=mk_option($dwdvm_custom5_action, "enable", "Yes");?></select></td>
    </tr>
    <tr>
    <td><input type="text" class="narrow" id="CUSTOM6INTERFACE" name="CUSTOM6INTERFACE" value="<?=$dwdvm_custom6_interface;?>"></input></td>
    <td><select id="CUSTOM6MODE" name="CUSTOM6MODE" size="1"><?=mk_option($dwdvm_custom6_mode, "rx", "Inbound");?><?=mk_option($dwdvm_custom6_mode, "tx", "Outbound");?></select></td>
    <td><select id="CUSTOM6TIME" name="CUSTOM6TIME" size="1"><?=mk_option($dwdvm_custom6_time, "h", "Last Hour");?><?=mk_option($dwdvm_custom6_time, "d", "Last Day");?><?=mk_option($dwdvm_custom6_time, "m", "Last Month");?><?=mk_option($dwdvm_custom6_time, "y", "Last Year");?></select></td>
    <td><input type="text" class="narrow dvmlimit2" id="CUSTOM6LIMIT" name="CUSTOM6LIMIT" value="<?=$dwdvm_custom6_limit;?>"></input></td>
    <td><select id="CUSTOM6UNIT" name="CUSTOM6UNIT" size="1"><?=mk_option($dwdvm_custom6_unit, "B", "B");?><?=mk_option($dwdvm_custom6_unit, "KB", "KB");?><?=mk_option($dwdvm_custom6_unit, "MB", "MB");?><?=mk_option($dwdvm_custom6_unit, "GB", "GB");?><?=mk_option($dwdvm_custom6_unit, "TB", "TB");?></select></td>
    <td><select id="CUSTOM6STOP" name="CUSTOM6STOP" size="1"><?=mk_option($dwdvm_custom6_stop, "disable", "Stop: None");?><?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_custom6_stop, $dvm_available_docker, "Stop: $dvm_available_docker")); } }?></select></td>
    <td><select id="CUSTOM6START" name="CUSTOM6START" size="1"><?=mk_option($dwdvm_custom6_start, "disable", "Start: None");?><?if($dvm_available_dockers) { foreach ($dvm_available_dockers as $dvm_available_docker) { echo(mk_option($dwdvm_custom6_start, $dvm_available_docker, "Start: $dvm_available_docker")); } }?></select></td>
    <td><select id="CUSTOM6ACTION" name="CUSTOM6ACTION" size="1"><?=mk_option($dwdvm_custom6_action, "disable", "No");?><?=mk_option($dwdvm_custom6_action, "enable", "Yes");?></select></td>
    </tr>
    </tbody>
    </table>
    </div>

    <dl>
        <dt>
            <input id="DEFAULT" type="submit" name="#default" value="Default">
            <input id="CLEANDB" type="button" value="Purge Database">
        </dt>
        <dd>
            <input type="submit" value="Apply"><input type="button" value="Done" onclick="done()">
        </dd>
    </dl>

    <blockquote class="inline_help">
    <p><strong>Purge Database</strong> cleans no longer existing network interfaces and their recorded data volume information from the database.</p>
    </blockquote>
</form>

<script type="text/javascript">
function checkRUNNING(){
   if ($('#SERVICE').val() === 'enable')
        $('#command').val('/usr/local/emhttp/plugins/dwdvm/scripts/start');
    else
        $('#command').val('/usr/local/emhttp/plugins/dwdvm/scripts/stop');
    if ("<?=$dwdvm_running;?>" == 1){
        $('.dwdvm-run').prop('disabled', true);
        $('#RESTART').prop('disabled', false);
        $('#CLEANDB').prop('disabled', false);
    }else{
        $('.dwdvm-run').prop('disabled', false);
        $('#RESTART').prop('disabled', true);
        $('#CLEANDB').prop('disabled', true);
    }
}
function checkLIMITS(){
    $('.dvmlimit').each(function( index ) {
        if($(this).val().trim() === '-1') {
            $(this).css('opacity', '0.33');
            $(this).next().css('opacity', '0.33');
            $(this).closest('dl').next().next().find('select').css('opacity', '0.33');
        } else {
            $(this).css('opacity', '');
            $(this).next().css('opacity', '');
            $(this).closest('select').css('opacity', '');
            $(this).closest('dl').next().next().find('select').css('opacity', '');
        }
    });
    $('.dvmlimit2').each(function( index ) {
        if($(this).val().trim() === '-1') {
            $(this).css('opacity', '0.33');
            $(this).parent().siblings().css('opacity', '0.33');
        } else {
            $(this).css('opacity', '');
            $(this).parent().siblings().css('opacity', '');
        }
    });
}
function Restart(){
    $('#command').val('/usr/local/emhttp/plugins/dwdvm/scripts/restart');
    $('#dwdvm-settings').submit();
}
function ResetConfig(){
    $('#command').val('');
    openBox('/usr/local/emhttp/plugins/dwdvm/scripts/resetconf', 'DVM Reset Config', 600, 600, true);
}
function ResetAll(){
    $('#command').val('');
    openBox('/usr/local/emhttp/plugins/dwdvm/scripts/resetall', 'DVM Reset All', 600, 600, true);
}
function CleanDB(){
    $('#command').val('');
    openBox('/usr/local/emhttp/plugins/dwdvm/scripts/clean_db', 'DVM Database Purger', 600, 600, true);
}
$(function() {

    $('form input:not([type="submit"])').keydown(function(e) {
        if (e.keyCode == 13) {
            e.preventDefault();
            return false;
        }
    });

    $('#btnApply').click(function(){
        $('#dwdvm-settings').submit();
    });

    $('#RESTART').click(Restart);

    if (typeof swal === "function") { 
        $('#RESETCONF').click(function(){ swal({title:"Are you sure?",text:"DVM configuration will be returned to the default state.<br>DVM database <u>will not be wiped</u> of any of its contents!",type:"warning",html:true,showCancelButton:true}, ResetConfig); });
        $('#RESETALL').click(function(){ swal({title:"Are you sure?",text:"DVM configuration will be returned to the default state.<br>DVM database <u>will be wiped</u> of all of its contents!",type:"warning",html:true,showCancelButton:true}, ResetAll); });
        $('#CLEANDB').click(function(){ swal({title:"Are you sure?",text:"All not currently existing network interfaces <u>and all their recorded data volume information</u> will be removed from the DVM database!",type:"warning",html:true,showCancelButton:true}, CleanDB); });
    } else {
        $('#RESETCONF').click(ResetConfig);
        $('#RESETALL').click(ResetAll);
        $('#CLEANDB').click(CleanDB);
    }

    $('#SERVICE').change(checkRUNNING);
    $('.dvmlimit').change(checkLIMITS);
    $('.dvmlimit2').change(checkLIMITS);

    checkRUNNING();
    checkLIMITS();

});
</script>
